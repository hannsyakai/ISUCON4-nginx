user root;
worker_processes  auto;
worker_rlimit_nofile 300000;
events {
  worker_connections  65535;
  use epoll;
  multi_accept on;
}


http {
    log_format ltsv "time:$time_local"
        "\thost:$remote_addr"
        "\tforwardedfor:$http_x_forwarded_for"
        "\treq:$request"
        "\tmethod:$request_method"
        "\turi:$request_uri"
        "\tstatus:$status"
        "\tsize:$body_bytes_sent"
        "\treferer:$http_referer"
        "\tua:$http_user_agent"
        "\treqtime:$request_time"
        "\truntime:$upstream_http_x_runtime"
        "\tapptime:$upstream_response_time"
        "\tcache:$upstream_http_x_cache"
        "\tvhost:$host"
    ;
  upstream app1 {
    server unix:/tmp/unicorn.sock;
    keepalive 32;
  }

  server {
    listen 80;
    listen 8888;
    client_max_body_size 1G;

    root /home/isucon/webapp/public;
    include /etc/nginx/mime.types;

    try_files $uri $uri/index.html @app;

  tcp_nopush  on;
  tcp_nodelay on;
  etag off;



    location ~ /slots/([a-z0-9_-]+)/ads/([a-z0-9_-]+)/count {
      set $slot $1;
      set $id $2;
      content_by_lua_file "/etc/nginx/lua/counter.lua";
    }

    location ~ /slots/([a-z0-9_-]+)/ads/([a-z0-9_-]+)/asset {
      open_file_cache max=200;
      root /;
      types        {}
      default_type video/mp4;
      try_files /store/$2 @error_json;
    }

    location ~ /slots/([a-z0-9_-]+)/ads/([a-z0-9_-]+)/redirect {
      set $slot $1;
      set $id $2;
      set $c $cookie_isuad;
      content_by_lua_file "/etc/nginx/lua/redirect.lua";
    }


    location ~ ^/slots/([a-z0-9_-]+)/ads/([a-z0-9_-]+)$ {
      set $slot $1;
      set $id $2;
      content_by_lua_file "/etc/nginx/lua/route_get_ad_with_id.lua";
    }

    location ~ ^/slots/([a-z0-9_-]+)/ads$ {
		add_header Access-Control-Allow-Origin *;
		add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
		add_header Access-Control-Allow-Headers "Origin, Authorization, Accept";
		add_header Access-Control-Allow-Credentials false;

      	proxy_set_header Host $http_host;
      	proxy_pass http://app1;
    }

    location ~ ^/slots/([a-z0-9_-]+)/ad$ {
      set $slot $1;
      content_by_lua_file "/etc/nginx/lua/route_get_ad.lua";
    }

    location = /init {
	content_by_lua 'os.execute("rm -rf /store/*")';
    }

    location /javascripts {
      open_file_cache max=200;
    root /home/isucon/webapp/public;

    }

    location /stylesheets {
      open_file_cache max=200;

    root /home/isucon/webapp/public;

    }

    location @error_json {
        types        {}
        default_type application/json;
	return 404 '{"error": "not_found"}';
    }

    location @app {
		add_header Access-Control-Allow-Origin *;
		add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
		add_header Access-Control-Allow-Headers "Origin, Authorization, Accept";
		add_header Access-Control-Allow-Credentials false;
      proxy_set_header Host $http_host;
      proxy_pass http://app1;
    }
  }
}
